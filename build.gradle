import com.github.gradle.node.npm.task.NpmTask

plugins {
	id 'java'
	id 'org.springframework.boot' version '3.5.0'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'com.github.node-gradle.node' version '3.5.1'
}

group = 'io.github.CapUlDis'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

node {
	download = false
	nodeModulesDir = file("${projectDir}/frontend")
	npmCommand = "/Users/d.dubkov/.nvm/versions/node/v22.13.0/bin/npm"
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.liquibase:liquibase-core'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.register('npmBuild', NpmTask) {
	args = ['run', 'build']
	workingDir = file("${projectDir}/frontend")
}

tasks.register('copyFrontend', Copy) {
	dependsOn 'npmBuild'
	from file("${projectDir}/frontend/dist")
	into file("${projectDir}/build/resources/main/static")
}

processResources.dependsOn(copyFrontend)
